plugins {
    id "org.ysb33r.rust.base" version "0.2"
    id 'org.ysb33r.rust.lib'  version '0.2'
    id 'com.ullink.msbuild' version '3.1'
    id 'com.ullink.nunit' version '1.12'
}

subprojects {
    repositories {
        mavenCentral()
    }
}

project(':core') {
    rust {
        useCargoSourceLayout(projectDir.name)
        cargoToml "${projectDir}/Cargo.toml"
    }
}

project(':extern_c') {
    rust {
        useCargoSourceLayout(projectDir.name)
        cargoToml "${projectDir}/Cargo.toml"
    }
}

project(':extern_dotnet') {
    msbuild {
        solutionFile = file("${projectDir}/extern_dotnet.sln")
    }
}

// ---------------------------------------------------------------------------------------------------------------

def DOC_PATH = file("${rootDir}/docs")
def DOC_GEN_PATH = file("${rootDir}/core/target/doc")

task syncRustDoc(type: Sync) {
    from DOC_GEN_PATH.absolutePath
    into DOC_PATH.absolutePath
}

task generateRustDoc(type: Exec) {
    workingDir = file("${rootDir}/core")
    commandLine = ["cargo", "doc"]
}

task deployRustDoc {}
deployRustDoc.dependsOn(generateRustDoc)
deployRustDoc.dependsOn(syncRustDoc)